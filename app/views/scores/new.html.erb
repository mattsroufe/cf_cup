<div style="text-align: center; position: absolute; width: 100%; top: 0px"><p style="color: green; "><%= notice %></p></div>

<h1 class="logo" style="margin-bottom:0">No. <%= @hole.number %></h1>
<h3 style="text-align:center; margin: 0 0 24px"><%= @match.course.name %></h3>

<% @players.each do |player| %>
  <div style="background:white; margin: 8px; overflow-x:scroll; display:flex; flex-direction:column; border-radius: 8px; box-shadow: var(--box-shadow);">
    <div style="display:flex; justify-content: space-between; margin: 8px">
      <div style="display:flex; flex-direction: column; justify-content: flex-start">
        <%= link_to player do %>
          <%= image_tag "#{player.username}.png", height: 64, width: 64, style: "border-radius:32px; box-shadow: var(--box-shadow)" %>
        <% end %>
        <div style="text-align:center; margin-top: 4px"><%= player.nick_name %></div>
      </div>
      <%= render "form", score: player.scores.find_or_create_by(match_id: @match.id, hole_id: @hole.id) %>
    </div>
  </div>
<% end %>

<br>

<div style="text-align:center; margin-bottom:32px">
  <%= link_to "Back to scorecard", scores_path(match_id: @match.id) %>
</div>

<script>
  function debounce(func, wait, immediate) {
    var timeout;
    return function() {
      var context = this, args = arguments;
      var later = function() {
        timeout = null;
        if (!immediate) func.apply(context, args);
      };
      var callNow = immediate && !timeout;
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
      if (callNow) func.apply(context, args);
    };
  };
  var emitChangeEvent = debounce(function (input) {
    input.dispatchEvent(new Event('change'))
  }, 300)

  document.querySelectorAll('form').forEach(form => {
    form.addEventListener('submit', e => {
      const body = new FormData(form)
      fetch(form.action, {
        method: form.method, // or 'PUT'
        body: body,
      })
      e.preventDefault()
    })
    form.querySelector('input[type="number"]').addEventListener('change', e => {
      form.dispatchEvent(new Event('submit'));
    })
    form.querySelectorAll('[data-target]').forEach(button => {
      button.addEventListener('click', e => {
        const input = form.querySelector(`#${button.dataset.target}`);
        if (input.value.length > 0) {
          input.value = button.querySelector('use').getAttribute('xlink:href').split('-').splice(-1)[0] === 'plus' ? parseInt(input.value) + 1 : parseInt(input.value) - 1
        } else {
          input.value = input.dataset.par
        }
        emitChangeEvent(input)
        e.preventDefault()
      })
    })
  })
</script>